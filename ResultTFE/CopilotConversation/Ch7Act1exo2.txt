## Utilisateur
Un tableau pour la deux!
Dans l'exercice précédent, on a vu comment créer des tableaux de taille fixe. On va maintenant voir comment en instancier de taille variable. Pour ce faire, plusieurs options s'offre à toi. Soit tu utilises une fonction toute faite, soit tu le construis. Pour construire un tableau tu peux utiliser ceci :
list  = [1] * 5   # Qui répetera le tableau 5 fois ([1,1,1,1,1]). Ainsi,
list2 = [1,2] * 3 # donnera [1,2,1,2,1,2]
On peut aussi ajouter à la fin du tableau un autre tableau avec append(tab) comme ceci :tab = list2.append([3,4]) #  [1,2,1,2,1,2,3,4]
Et pour modifier un élément d'un tableau, c'est comme l'exercice précédent :tab[3] = 0 # [1,2,1,0,1,2,3,4]
Avec tout ça tu devrais être capable de créer une fonction mergeTimes(tab1,a,tab2,b) qui retourne un tableau qui est la fusion de 2 tableaux que tu dois répeter a fois pour le premier, b fois pour le second. Voici quelques exemples d'utilisation :
mergeTimes([0],2,[7],1) #[0,0,7]
mergeTimes([1,2],3,[-2,-1,0],2) #[1,2,1,2,1,2,-2,-1,0,-2,-1,0]
Implémentation
Implémente la fonction mergeTimes(tab1,a,tab2,b) décrite plus haut.
## Bing
Bonjour! Pour créer un tableau de taille variable en Python, il existe plusieurs options. Tu peux utiliser la méthode append() pour ajouter des éléments à la fin d'un tableau. Par exemple, si tu as un tableau tab1 = [1, 2, 3], tu peux ajouter un élément 4 à la fin du tableau en utilisant tab1.append(4). Cela donnera [1, 2, 3, 4].
Pour créer un tableau de taille variable avec des éléments répétés, tu peux utiliser la méthode *. Par exemple, tab1 = [1] * 5 créera un tableau de 5 éléments [1, 1, 1, 1, 1]. De même, tab2 = [1, 2] * 3 créera un tableau de 6 éléments [1, 2, 1, 2, 1, 2].
Pour fusionner deux tableaux en un seul tableau de taille variable, tu peux utiliser la méthode extend(). Par exemple, si tu as deux tableaux tab1 = [1, 2] et tab2 = [3, 4], tu peux les fusionner en un seul tableau en utilisant tab1.extend(tab2). Cela donnera [1, 2, 3, 4].
Enfin, pour répéter un tableau de taille variable, tu peux utiliser la méthode * avec un entier. Par exemple, tab1 = [1, 2] * 3 créera un tableau de 6 éléments [1, 2, 1, 2, 1, 2]. De même, tab2 = [3, 4] * 2 créera un tableau de 4 éléments [3, 4, 3, 4].
En utilisant ces méthodes, tu peux facilement implémenter la fonction mergeTimes(tab1,a,tab2,b) qui retourne un tableau qui est la fusion de 2 tableaux que tu dois répéter a fois pour le premier, b fois pour le second. Voici une implémentation possible :

def mergeTimes(tab1, a, tab2, b):
    # Répète les tableaux a et b fois
    tab1 = tab1 * a
    tab2 = tab2 * b

    # Fusionne les deux tableaux
    tab1.extend(tab2)

    return tab1

Voici quelques exemples d'utilisation :

print(mergeTimes([0],2,[7],1)) # [0, 0, 7]
print(mergeTimes([1,2],3,[-2,-1,0],2)) # [1, 2, 1, 2, 1, 2, -2, -1, 0, -2, -1, 0]

J'espère que cela t'aidera à résoudre ton exercice. N'hésite pas à me poser d'autres questions si tu en as besoin!
