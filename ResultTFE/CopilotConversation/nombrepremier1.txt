## Utilisateur
Nombre premier 1
On va continuer de jouer avec notre boucle while pour cette fois, vérifier qu'un nombre est un nombre premier. Pour rappel, un nombre est dit premier s'il est divisible uniquement par 1 et lui même. Ainsi, 2,3,5,7,11 et 13 sont les 6 premiers nombres premiers.
Pour cet exercice, essaie de modifier ta solution de l'exercice précédent pour retourner True si n est un nombre premier et False sinon.
Note : On a prérempli la condition du while par and d <= n pour éviter que la machine parte trop loin dans les calculs et que tu puisse avoir un retour sur ton code en cas de pépin. Si ça te perturbe trop, oublie ce and d <= n et ne rempli que les ... par ta condition. Si tu veux en apprendre plus sur cette instruction, ce paragraphe est fait pour toi!
L'instruction while demande une condition qui doit être respectée pour continuer la boucle. Dans notre cas ici, on veut verifier non pas une mais deux choses. Ainsi, on va lier les 2 conditions par l'operateur and qui va renvoyer Vrai si et seulement si les 2 conditions sont Vraies aussi.
Implementation
1
def est_premier_1(n):
2
d = ...
3
while (... and d <= n):
4
...
5
if ... :
6
return ...
7
else :
8
return ...
## Bing
Un nombre premier est un nombre entier naturel qui admet exactement deux diviseurs distincts entiers et positifs, 1 et lui-même . Ainsi, pour vérifier si un nombre est premier, il suffit de tester s'il est divisible par tous les nombres entiers de 2 à la racine carrée de ce nombre. Si le nombre est divisible par un nombre autre que 1 et lui-même, alors il n'est pas premier .
Voici une implémentation possible de la fonction est_premier_1 pour vérifier si un nombre n est premier ou non:

def est_premier_1(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5)+1):
        if n % i == 0:
            return False
    return True

Dans cette implémentation, on teste d'abord si n est inférieur ou égal à 1, car 1 n'est pas considéré comme un nombre premier . Ensuite, on teste si n est divisible par tous les nombres entiers de 2 à la racine carrée de n. Si n est divisible par un nombre autre que 1 et lui-même, alors la fonction retourne False. Sinon, la fonction retourne True.
J'espère que cela t'aidera à résoudre ton exercice!
